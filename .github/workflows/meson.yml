name: On PRs - meson

on: [push, pull_request]

concurrency:
  group: ${{github.workflow}}-${{github.head_ref}}
  cancel-in-progress: true

jobs:
  Linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx: ['7', '13']
    steps:
      - uses: actions/checkout@v4
      - uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{matrix.cxx}}
      - name: Install meson
        run: python3 -m pip install meson ninja
      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3
          meson compile -C "${{github.workspace}}/build"
          meson test -C "${{github.workspace}}/build"
  Linux-clang:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx: ['7', '17', '18']
    steps:
      - uses: actions/checkout@v4
      - uses: egor-tensin/setup-clang@v1
        with:
          version: ${{matrix.cxx}}
      - name: Install meson
        run: |
          python3 -m pip install meson ninja
          sudo apt install -y libc++abi-${{matrix.cxx}}-dev libc++-${{matrix.cxx}}-dev lld-${{matrix.cxx}}
      - name: Compile and Test
        env:
          CC_LD: lld
          CXX_LD: lld
          CXXFLAGS: -stdlib=libc++
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3 -Dcpp_std=c++20
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
  MSVC:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: ['x64', 'x86']
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          python -m pip install meson ninja

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.platform}}

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3 -Dcpp_std=c++latest -Db_sanitize=address
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
  clang-cl:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          python -m pip install meson ninja

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Compile and Test
        env:
          CC: clang-cl
          CXX: clang-cl
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=1 -Dcpp_std=c++latest -Db_sanitize=address
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
  MSYS2:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: ['UCRT64', 'CLANG64']
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          path-type: strict
          msystem: ${{matrix.platform}}
          install: >-
            bash
            diffutils
          pacboy: >-
            cc:p
            meson:p
            ninja:p

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3 -Dcpp_std=c++20
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
  Cygwin:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: 'MSYS'
          install: >-
            diffutils
            gcc
            meson
            ninja
      - name: Compile and Test
        run: |
          meson setup build -Dwarning_level=3 -Dcpp_std=gnu++20
          meson compile -C build --verbose
          meson test -C build --verbose
  MacOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          brew install meson

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3 -Dcpp_std=c++20 -Db_sanitize=address,undefined
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
  FreeBSD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vmactions/freebsd-vm@v1
        with:
          prepare: |
            pkg install -y ninja meson bash
          run: |
            meson setup "${{github.workspace}}/build" -Dwarning_level=3 -Dcpp_std=c++20
            meson compile -C "${{github.workspace}}/build" --verbose
            meson test -C "${{github.workspace}}/build" --verbose
